import matplotlib.pyplot as plt
>>> import numpy as np
>>> import pandas as pd
>>> from pandas import Series,DataFrame
>>> data=np.arange(10)
>>> data
array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
>>> plt.plot(data)
[<matplotlib.lines.Line2D object at 0x0000000006D9A3C8>]
>>> plt.show()
>>> fig=plt.figure()
>>> ax1=fig.add_subplot(2,2,1)
>>> ax2=fig.add_subplot(2,2,2)
>>> ax3=fig.add_subplot(2,2,3)
>>> plt.show()
>>> plt.plot(np.random.randn(50).cumsum(),'k--')
[<matplotlib.lines.Line2D object at 0x00000000071F2198>]
>>> plt.show()
>>> ax1.hist(np.random.randn(100),bins=20,color='k',alpha=0.3)
(array([ 2.,  1.,  0.,  0.,  1.,  1.,  3.,  6., 10.,  9., 12.,  7., 16.,
        9.,  9.,  7.,  5.,  0.,  0.,  2.]), array([-3.17135033, -2.87601742, -2.58068451, -2.2853516 , -1.99001869,
       -1.69468578, -1.39935287, -1.10401996, -0.80868705, -0.51335414,
       -0.21802123,  0.07731168,  0.37264459,  0.6679775 ,  0.96331042,
        1.25864333,  1.55397624,  1.84930915,  2.14464206,  2.43997497,
        2.73530788]), <a list of 20 Patch objects>)
>>> ax2.scatter(np.arange(30),np.arange(30)+3*np.random.randn(30))
<matplotlib.collections.PathCollection object at 0x000000000716AEF0>        
>>> plt.show()
>>> fig,axes=plt.subplots(2,3)
>>> axes
array([[<matplotlib.axes._subplots.AxesSubplot object at 0x000000000738FD30>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x00000000073BC278>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x00000000073E47F0>],
       [<matplotlib.axes._subplots.AxesSubplot object at 0x00000000082BBD68>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x00000000082ED320>,
        <matplotlib.axes._subplots.AxesSubplot object at 0x0000000008313898>]],
      dtype=object)
>>> plt.show()
>>> subplots_adjust(left=None,bottom=None,right=None,top=None,wspace=None,hspace=None)
Traceback (most recent call last):
  File "<pyshell#27>", line 1, in <module>
    subplots_adjust(left=None,bottom=None,right=None,top=None,wspace=None,hspace=None)
NameError: name 'subplots_adjust' is not defined
>>> subplots_adjust(left=None,bottom=None,right=None,top=None,wspace=None,hspace=None)
Traceback (most recent call last):
  File "<pyshell#28>", line 1, in <module>
    subplots_adjust(left=None,bottom=None,right=None,top=None,wspace=None,hspace=None)
NameError: name 'subplots_adjust' is not defined
>>> fig,axes=plt.subplots(2,2,sharex=True,sharey=True)
>>> for i in range(2):
	for j in range(2):
		axes[i,j].hist(np.random.randn(500),bins=50,color='k',alpha=0.5)

		
(array([ 1.,  0.,  0.,  3.,  0.,  1.,  2.,  0.,  6.,  3.,  2., 12.,  7.,
       13., 14., 11., 17., 17., 22., 20., 19., 22., 25., 18., 33., 24.,
       29., 19., 11., 21., 21., 17.,  9., 16., 15., 13.,  8.,  3., 10.,
        4.,  3.,  3.,  2.,  1.,  1.,  0.,  0.,  1.,  0.,  1.]), array([-3.11799842, -2.99083429, -2.86367015, -2.73650602, -2.60934189,
       -2.48217775, -2.35501362, -2.22784949, -2.10068536, -1.97352122,
       -1.84635709, -1.71919296, -1.59202882, -1.46486469, -1.33770056,
       -1.21053643, -1.08337229, -0.95620816, -0.82904403, -0.70187989,
       -0.57471576, -0.44755163, -0.3203875 , -0.19322336, -0.06605923,
        0.0611049 ,  0.18826904,  0.31543317,  0.4425973 ,  0.56976143,
        0.69692557,  0.8240897 ,  0.95125383,  1.07841797,  1.2055821 ,
        1.33274623,  1.45991037,  1.5870745 ,  1.71423863,  1.84140276,
        1.9685669 ,  2.09573103,  2.22289516,  2.3500593 ,  2.47722343,
        2.60438756,  2.73155169,  2.85871583,  2.98587996,  3.11304409,
        3.24020823]), <a list of 50 Patch objects>)
(array([ 1.,  1.,  1.,  0.,  0.,  1.,  5.,  4.,  5.,  4.,  7.,  8., 14.,
       24., 14., 14., 27., 12., 17., 22., 23., 19., 24., 25., 24., 18.,
       19., 25., 24., 15., 19., 18., 13., 12., 11.,  7.,  6.,  3.,  3.,
        2.,  4.,  0.,  1.,  1.,  1.,  0.,  0.,  0.,  0.,  2.]), array([-2.84087557, -2.71962103, -2.59836649, -2.47711194, -2.3558574 ,
       -2.23460285, -2.11334831, -1.99209376, -1.87083922, -1.74958468,
       -1.62833013, -1.50707559, -1.38582104, -1.2645665 , -1.14331195,
       -1.02205741, -0.90080287, -0.77954832, -0.65829378, -0.53703923,
       -0.41578469, -0.29453014, -0.1732756 , -0.05202106,  0.06923349,
        0.19048803,  0.31174258,  0.43299712,  0.55425167,  0.67550621,
        0.79676075,  0.9180153 ,  1.03926984,  1.16052439,  1.28177893,
        1.40303348,  1.52428802,  1.64554256,  1.76679711,  1.88805165,
        2.0093062 ,  2.13056074,  2.25181529,  2.37306983,  2.49432437,
        2.61557892,  2.73683346,  2.85808801,  2.97934255,  3.1005971 ,
        3.22185164]), <a list of 50 Patch objects>)
(array([ 2.,  0.,  1.,  2.,  1.,  1.,  1.,  2.,  3.,  2.,  3., 11.,  6.,
        8., 11., 12., 13.,  8., 13., 20., 16., 21., 25., 26., 25., 30.,
       28., 24., 20., 25., 16., 10., 15.,  9., 17., 16.,  9., 17.,  8.,
        6.,  3.,  5.,  2.,  3.,  1.,  1.,  0.,  0.,  0.,  2.]), array([-3.31291865, -3.18405766, -3.05519667, -2.92633568, -2.79747468,
       -2.66861369, -2.5397527 , -2.41089171, -2.28203072, -2.15316972,
       -2.02430873, -1.89544774, -1.76658675, -1.63772576, -1.50886476,
       -1.38000377, -1.25114278, -1.12228179, -0.9934208 , -0.8645598 ,
       -0.73569881, -0.60683782, -0.47797683, -0.34911584, -0.22025484,
       -0.09139385,  0.03746714,  0.16632813,  0.29518912,  0.42405012,
        0.55291111,  0.6817721 ,  0.81063309,  0.93949408,  1.06835508,
        1.19721607,  1.32607706,  1.45493805,  1.58379904,  1.71266004,
        1.84152103,  1.97038202,  2.09924301,  2.228104  ,  2.356965  ,
        2.48582599,  2.61468698,  2.74354797,  2.87240896,  3.00126996,
        3.13013095]), <a list of 50 Patch objects>)
(array([ 1.,  1.,  0.,  1.,  0.,  2.,  2.,  2.,  3.,  8.,  7.,  5.,  5.,
        5.,  9., 11., 10., 11., 20., 10., 20., 23., 23., 21., 23., 24.,
       19., 14., 19., 28., 22., 17., 16., 23., 12.,  6., 14., 19.,  7.,
        6.,  8.,  5.,  6.,  2.,  4.,  2.,  2.,  0.,  0.,  2.]), array([-3.07277504, -2.95556663, -2.83835823, -2.72114982, -2.60394142,
       -2.48673301, -2.3695246 , -2.2523162 , -2.13510779, -2.01789939,
       -1.90069098, -1.78348257, -1.66627417, -1.54906576, -1.43185736,
       -1.31464895, -1.19744054, -1.08023214, -0.96302373, -0.84581533,
       -0.72860692, -0.61139851, -0.49419011, -0.3769817 , -0.2597733 ,
       -0.14256489, -0.02535649,  0.09185192,  0.20906033,  0.32626873,
        0.44347714,  0.56068554,  0.67789395,  0.79510236,  0.91231076,
        1.02951917,  1.14672757,  1.26393598,  1.38114439,  1.49835279,
        1.6155612 ,  1.7327696 ,  1.84997801,  1.96718642,  2.08439482,
        2.20160323,  2.31881163,  2.43602004,  2.55322845,  2.67043685,
        2.78764526]), <a list of 50 Patch objects>)
>>> plt.subplots_adjust(wspace=0,hspace=0)
>>> plt.show()
>>> data=np.random.randn(30).cumsum()
>>> plt.plot(data,'k--',label='Default')
[<matplotlib.lines.Line2D object at 0x000000000A1E0390>]
>>> plt.plot(data,'k--',drawstyle='steps-post',label='steps-post')
[<matplotlib.lines.Line2D object at 0x0000000008C31940>]
>>> plt.legend(loc='best')
<matplotlib.legend.Legend object at 0x000000000A1E0780>
>>> plt.show()
>>> ax=fig.add_subplot(1,1,1)
>>> ax.plot(np.random.randn(1000).cumsum())
[<matplotlib.lines.Line2D object at 0x0000000008F280F0>]
>>> plt.show()
>>> ticks=ax.set_xticks([0,250,500,750,1000])
>>> labels=ax.set_xticklabels(['one','two','three','four','five'],rotation=30,fontsize='small')
>>> ax.set_title('My first matplotlib plot')
Text(0.5, 1.0, 'My first matplotlib plot')
>>> ax.set_xlabel('Stages')
Text(0.5, 23.52222222222222, 'Stages')
>>> plt.show()
>>> props={
	'title':'My first matplotlib plot',
	'xlabel':'Stages'
	}
>>> ax.set(**props)
[Text(0.5, 23.52222222222222, 'Stages'), Text(0.5, 1.0, 'My first matplotlib plot')]
>>> plt.show()
>>> fig=plt.figure();ax=fig.add_subplot(1,1,1)
>>> ax.plot(randn(1000).cumsum(),'k',label='one')
[<matplotlib.lines.Line2D object at 0x000000000A0C14A8>]
>>> ax.plot(randn(1000).cumsum(),'k--',label='two')
[<matplotlib.lines.Line2D object at 0x000000000A0C1470>]
>>> ax.plot(randn(1000).cumsum(),'k.',label='three')
[<matplotlib.lines.Line2D object at 0x000000000A0C1828>]
>>> plt.show()
>>> from datetime import datetime
>>> fig=plt.figure()
>>> ax=fig.add_subplot(1,1,1)
file='D:\python\pra\spx.csv'
>>> data=pd.read_csv(file,index_col=0,parse_dates=True)
>>> spx=data['SPX']
>>> spx.plot(ax=ax,style='k-')
<matplotlib.axes._subplots.AxesSubplot object at 0x0000000003492390>
>>> plt.show()
>>> for date,label in crisis_data:
	ax.annotate(label,xy=(date,spx.asof(date)+75),
		    xytext=(date,spx.asof(date)+225),
		    arrowprops=dict(facecolor='black',headwidth=4,width=2,
				    headlength=4),
		    horizontalalignment='left',verticalalignment='top')

	
Text(2007-10-11 00:00:00, 1779.41, 'Peak of bull market')
Text(2008-03-12 00:00:00, 1533.77, 'Bear Stearns Fails')
Text(2008-09-15 00:00:00, 1417.7, 'Lehman Bankruptcy')
>>> ax.set_xlim(['1/1/2007','1/1/2008'])
(732677.0, 733042.0)
>>> ax.set_ylim([600,1800])
(600, 1800)
>>> ax.set_title('Important dates in the 2008-2009 financial crisis')
Text(0.5, 1.0, 'Important dates in the 2008-2009 financial crisis')
>>> fig=plt.figure()
>>> ax=fig.add_subplot(1,1,1)
>>> rect=plt.Rectangle((0.2,0.75),0.4,0.15,color='k',alpha=0.3)
>>> circ=plt.Circle((0.7,0.2),0.15,color='b',alpha=0.3)
>>> pgon=plt.Polygon([[0.15,0.15],[0.35,0.4],[0.2,0.6]],color='g',alpha=0.5)
>>> ax.add_patch(rect)
<matplotlib.patches.Rectangle object at 0x00000000071B95F8>
>>> ax.add_patch(circ)
<matplotlib.patches.Circle object at 0x00000000071B9588>
>>> ax.add_patch(pgon)
<matplotlib.patches.Polygon object at 0x00000000071B95C0>
>>> plt.show()
>>> from io import BytesIO
>>> buffer=BytesIO()
>>> plt.savefig(buffer)
>>> plot_data=buffer.getvalue()
>>> plt.rc('figure',figsize=(10,10))
>>> font_options={'family':'monospace','weight':'bold','size':'small'}
>>> plt.rc('font',**font_options)
Traceback (most recent call last):
  File "D:\python\python3.6.6\lib\site-packages\matplotlib\rcsetup.py", line 147, in validate_float
    return float(s)
ValueError: could not convert string to float: 'small'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\python\python3.6.6\lib\site-packages\matplotlib\__init__.py", line 861, in __setitem__
    cval = self.validate[key](val)
  File "D:\python\python3.6.6\lib\site-packages\matplotlib\rcsetup.py", line 149, in validate_float
    raise ValueError('Could not convert "%s" to float' % s)
ValueError: Could not convert "small" to float

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<pyshell#73>", line 1, in <module>
    plt.rc('font',**font_options)
  File "D:\python\python3.6.6\lib\site-packages\matplotlib\pyplot.py", line 302, in rc
    matplotlib.rc(group, **kwargs)
  File "D:\python\python3.6.6\lib\site-packages\matplotlib\__init__.py", line 1200, in rc
    rcParams[key] = v
  File "D:\python\python3.6.6\lib\site-packages\matplotlib\__init__.py", line 863, in __setitem__
    raise ValueError("Key %s: %s" % (key, str(ve)))
ValueError: Key font.size: Could not convert "small" to float
>>> s=pd.Series(np.random.randn(10).cumsum(),index=np.arange(0,100,10))
>>> s.plot()
<matplotlib.axes._subplots.AxesSubplot object at 0x00000000087BBFD0>
>>> plt.show()
>>> df=pd.DataFrame(np.random.randn(10,4).cumsum(0),
		    columns=['A','B','C','D'],
		    index=np.arange(0,100,10))
>>> df.plot()
<matplotlib.axes._subplots.AxesSubplot object at 0x00000000071B9278>
>>> plt.show()
>>> fig,axes=plt.subplots(2,1)
>>> data=pd.Series(np.random.rand(16),index=list('abcdefghijklmnop'))
>>> data.plot.bar(ax=axes[0],color='k',alpha=0.7)
<matplotlib.axes._subplots.AxesSubplot object at 0x00000000089286D8>
>>> data.plot.barh(ax=axes[1],color='k',alpha=0.7)
<matplotlib.axes._subplots.AxesSubplot object at 0x000000000896FF60>
>>> plt.show()
>>> file='D:\python\pra\tips.csv'
>>> tips=pd.read_csv(file)
Traceback (most recent call last):
  File "<pyshell#104>", line 1, in <module>
    tips=pd.read_csv(file)
  File "D:\python\python3.6.6\lib\site-packages\pandas\io\parsers.py", line 702, in parser_f
    return _read(filepath_or_buffer, kwds)
  File "D:\python\python3.6.6\lib\site-packages\pandas\io\parsers.py", line 429, in _read
    parser = TextFileReader(filepath_or_buffer, **kwds)
  File "D:\python\python3.6.6\lib\site-packages\pandas\io\parsers.py", line 895, in __init__
    self._make_engine(self.engine)
  File "D:\python\python3.6.6\lib\site-packages\pandas\io\parsers.py", line 1122, in _make_engine
    self._engine = CParserWrapper(self.f, **self.options)
  File "D:\python\python3.6.6\lib\site-packages\pandas\io\parsers.py", line 1853, in __init__
    self._reader = parsers.TextReader(src, **kwds)
  File "pandas\_libs\parsers.pyx", line 387, in pandas._libs.parsers.TextReader.__cinit__
  File "pandas\_libs\parsers.pyx", line 705, in pandas._libs.parsers.TextReader._setup_parser_source
FileNotFoundError: [Errno 2] File b'D:\\python\\pra\tips.csv' does not exist: b'D:\\python\\pra\tips.csv'
(明明就有这个文件！！！)
>>> import seaborn as sns
Traceback (most recent call last):
  File "<pyshell#118>", line 1, in <module>
    import seaborn as sns
ModuleNotFoundError: No module named 'seaborn'
>>> comp1=np.random.normal(0,1,size=200)
>>> comp2=np.random.normal(10,2,size=200)
>>> values=pd.Series(np.concatenate([comp1,comp2]))
>>> sns.distplot(vales,bins=100,color='k')
Traceback (most recent call last):
  File "<pyshell#110>", line 1, in <module>
    sns.distplot(vales,bins=100,color='k')
NameError: name 'sns' is not defined
>>> file='D:\python\pra\macrodata.csv'
>>> macro=pd.read_csv(file)
>>> data=macro[['cpi','m1','tbilrate','unemp']]
>>> trans_data=np.log(data).diff().dropna()
>>> trans_data[-5:]
          cpi        m1  tbilrate     unemp
198 -0.007904  0.045361 -0.396881  0.105361
199 -0.021979  0.066753 -2.277267  0.139762
200  0.002340  0.010286  0.606136  0.160343
201  0.008419  0.037461 -0.200671  0.127339
202  0.008894  0.012202 -0.405465  0.042560
>>> sns.replot('m1','unemp',data=trans_data)
Traceback (most recent call last):
  File "<pyshell#119>", line 1, in <module>
    sns.replot('m1','unemp',data=trans_data)
NameError: name 'sns' is not defined
>>> plt.title('Changes in log %s versus log %s' % ('m1','unemp'))
Text(0.5, 1.0, 'Changes in log m1 versus log unemp')
>>> sns.pairplot(trans_data,diag_kind='kde',plot_kws={'alpha':0.2})
Traceback (most recent call last):
  File "<pyshell#121>", line 1, in <module>
    sns.pairplot(trans_data,diag_kind='kde',plot_kws={'alpha':0.2})
NameError: name 'sns' is not defined
