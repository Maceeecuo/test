>>> from pandas import Series,DataFrame
>>> import pandas as pd
>>> import numpy as np
>>> from datetime import datetime
>>> now=datetime.now()
>>> now
datetime.datetime(2019, 5, 20, 21, 7, 59, 729421)
>>> now.year,now.month,now.day
(2019, 5, 20)
>>> delta=datetime(2011,1,7)-datetime(2008,6,24)
>>> delta
datetime.timedelta(927)
>>> delta=datetime(2011,1,7)-datetime(2008,6,24,8,15)
>>> delta
datetime.timedelta(926, 56700)
>>> delta.days
926
>>> delta.seconds
56700
>>> from datetime import timedelta
>>> start=datetime(2011,1,7)
>>> start+timedelta(12)
datetime.datetime(2011, 1, 19, 0, 0)
>>> start-2*timedelta(12)
datetime.datetime(2010, 12, 14, 0, 0)
>>> stamp=datetime(2011,1,3)
>>> str(stamp)
'2011-01-03 00:00:00'
>>> stamp.strftime('%Y-%m-%d')
'2011-01-03'
>>> value='2011-01-03'
>>> datetime.strptime(value,'%Y-%m-%d')
datetime.datetime(2011, 1, 3, 0, 0)
>>> datestrs=['7/6/2011','8/6/2011']
>>> [datetime.strptime(x,'%m/%d/%Y') for x in datestrs]
[datetime.datetime(2011, 7, 6, 0, 0), datetime.datetime(2011, 8, 6, 0, 0)]
>>> from dateutil.parser import parse
>>> parse('2011-01-03')
datetime.datetime(2011, 1, 3, 0, 0)
>>> parse('Jan 31,1997 10:45 PM')
datetime.datetime(2019, 1, 31, 22, 45)
>>> parse('6/12/2011',dayfirst=True)
datetime.datetime(2011, 12, 6, 0, 0)
>>> datestrs=['2011-07-06 12:00:00','2011-08-06 00:00:00']
>>> pd.to_datetime(datestrs)
DatetimeIndex(['2011-07-06 12:00:00', '2011-08-06 00:00:00'], dtype='datetime64[ns]', freq=None)
>>> idx=pd.to_datetime(datestrs+[None])
>>> idx
DatetimeIndex(['2011-07-06 12:00:00', '2011-08-06 00:00:00', 'NaT'], dtype='datetime64[ns]', freq=None)
>>> idx[2]
NaT
>>> pd.isnull(idx)
array([False, False,  True])
>>> dates=[datetime(2011,1,2),datetime(2011,1,5),datetime(2011,1,7),datetime(2011,1,8),datetime(2011,1,10),datetime(2011,1,12)]
>>> ts=pd.Series(np.random.randn(6),index=dates)
>>> ts
2011-01-02    1.534794
2011-01-05    1.682838
2011-01-07    0.898709
2011-01-08    1.070061
2011-01-10    0.742332
2011-01-12   -1.443218
dtype: float64
>>> ts.index
DatetimeIndex(['2011-01-02', '2011-01-05', '2011-01-07', '2011-01-08',
               '2011-01-10', '2011-01-12'],
              dtype='datetime64[ns]', freq=None)
>>> ts+ts[::2]
2011-01-02    3.069588
2011-01-05         NaN
2011-01-07    1.797419
2011-01-08         NaN
2011-01-10    1.484664
2011-01-12         NaN
dtype: float64
>>> ts.index.dtype
dtype('<M8[ns]')
>>> stamp=ts.index[0]
>>> stamp
Timestamp('2011-01-02 00:00:00')
>>> stamp=ts.index[2]
>>> ts[stamp]
0.8987094573020424
>>> ts['1/10/2011']
0.7423321795430415
>>> ts['20110110']
0.7423321795430415
>>> longer_ts=pd.Series(np.random.randn(1000),index=pd.date_range('1/1/2000',periods=1000))
>>> longer_ts
2000-01-01   -0.623294
2000-01-02   -0.634026
2000-01-03    0.597426
2000-01-04   -0.306465
2000-01-05    0.034276
2000-01-06    0.360293
2000-01-07   -1.829890
2000-01-08   -0.199607
2000-01-09    0.675506
2000-01-10    0.609421
2000-01-11   -1.130246
2000-01-12    0.082419
2000-01-13    0.065298
2000-01-14   -0.367087
2000-01-15    0.614278
2000-01-16   -0.418056
2000-01-17   -0.726421
2000-01-18   -1.485554
2000-01-19   -1.939076
2000-01-20    0.283641
2000-01-21    0.262310
2000-01-22    0.785518
2000-01-23    0.470987
2000-01-24    0.932667
2000-01-25    0.764888
2000-01-26   -1.349524
2000-01-27   -0.744734
2000-01-28    0.166546
2000-01-29    1.012610
2000-01-30    0.966602
                ...   
2002-08-28    0.654791
2002-08-29   -0.333794
2002-08-30   -1.339439
2002-08-31    0.999912
2002-09-01    0.929076
2002-09-02   -2.202347
2002-09-03    1.109016
2002-09-04   -0.500233
2002-09-05    0.704215
2002-09-06    0.570214
2002-09-07   -0.114361
2002-09-08   -1.278685
2002-09-09   -1.066207
2002-09-10    0.195288
2002-09-11   -1.334189
2002-09-12    0.024707
2002-09-13    0.417800
2002-09-14    0.690170
2002-09-15    0.876413
2002-09-16   -2.851708
2002-09-17    0.245952
2002-09-18    0.362587
2002-09-19    1.053413
2002-09-20    0.574050
2002-09-21   -0.862246
2002-09-22   -0.953565
2002-09-23    2.047830
2002-09-24    0.215611
2002-09-25   -1.156691
2002-09-26    0.113608
Freq: D, Length: 1000, dtype: float64
>>> longer_ts['2001-05']
2001-05-01   -1.095188
2001-05-02    1.146195
2001-05-03   -0.233926
2001-05-04   -1.521112
2001-05-05    1.765416
2001-05-06   -0.739004
2001-05-07   -0.995989
2001-05-08    0.150248
2001-05-09    0.574767
2001-05-10   -0.562427
2001-05-11    1.033844
2001-05-12   -0.547675
2001-05-13    0.537207
2001-05-14   -1.614059
2001-05-15   -0.632680
2001-05-16    0.275747
2001-05-17   -0.254875
2001-05-18    0.645625
2001-05-19    0.173881
2001-05-20   -0.210436
2001-05-21   -0.053736
2001-05-22   -0.140839
2001-05-23   -1.270958
2001-05-24    1.237287
2001-05-25   -0.367318
2001-05-26   -1.778539
2001-05-27   -0.601305
2001-05-28   -2.215521
2001-05-29    0.037933
2001-05-30   -0.951993
2001-05-31    0.600964
Freq: D, dtype: float64
>>> ts[datetime(2011,1,7):]
2011-01-07    0.898709
2011-01-08    1.070061
2011-01-10    0.742332
2011-01-12   -1.443218
dtype: float64
>>> ts
2011-01-02    1.534794
2011-01-05    1.682838
2011-01-07    0.898709
2011-01-08    1.070061
2011-01-10    0.742332
2011-01-12   -1.443218
dtype: float64
>>> ts['1/6/2011':'1/11/2011']
2011-01-07    0.898709
2011-01-08    1.070061
2011-01-10    0.742332
dtype: float64
>>> ts.truncate(after='1/9/2011')
2011-01-02    1.534794
2011-01-05    1.682838
2011-01-07    0.898709
2011-01-08    1.070061
dtype: float64
>>> dates=pd.date_range('1/1/2000',periods=100,freq='W-WED')
>>> long_df=pd.DataFrame(np.random.randn(100,4),index=dates,columns=['Colorado','Texas','New York','Ohio'])
>>> long_df.loc['5-2001']
            Colorado     Texas  New York      Ohio
2001-05-02  0.373974  0.388488 -1.126174  0.158041
2001-05-09 -1.462039  0.046717 -1.793968 -1.068680
2001-05-16  1.428114 -0.669129 -0.079163 -0.607379
2001-05-23 -1.099339 -0.962096 -0.250151  1.530302
2001-05-30 -0.464684  1.342663  0.665441  0.282126
>>> dates=pd.DatetimeIndex(['1/1/2000','1/2/2000','1/2/2000','1/2/2000','1/3/2000'])
>>> dup_ts=pd.Series(np.arange(5),index=dates)
>>> dup_ts
2000-01-01    0
2000-01-02    1
2000-01-02    2
2000-01-02    3
2000-01-03    4
dtype: int32
>>> dup_ts.index.is_unique
False
>>> dup_ts['1/3/2000']
4
>>> dup_ts['1/2/2000']
2000-01-02    1
2000-01-02    2
2000-01-02    3
dtype: int32
>>> grouped=dup_ts.groupby(level=0)
>>> grouped.mean()
2000-01-01    0
2000-01-02    2
2000-01-03    4
dtype: int32
>>> grouped.count()
2000-01-01    1
2000-01-02    3
2000-01-03    1
dtype: int64
>>> ts
2011-01-02    1.534794
2011-01-05    1.682838
2011-01-07    0.898709
2011-01-08    1.070061
2011-01-10    0.742332
2011-01-12   -1.443218
dtype: float64
>>> index=pd.date_range('2012-04-01','2012-06-01')
>>> index
DatetimeIndex(['2012-04-01', '2012-04-02', '2012-04-03', '2012-04-04',
               '2012-04-05', '2012-04-06', '2012-04-07', '2012-04-08',
               '2012-04-09', '2012-04-10', '2012-04-11', '2012-04-12',
               '2012-04-13', '2012-04-14', '2012-04-15', '2012-04-16',
               '2012-04-17', '2012-04-18', '2012-04-19', '2012-04-20',
               '2012-04-21', '2012-04-22', '2012-04-23', '2012-04-24',
               '2012-04-25', '2012-04-26', '2012-04-27', '2012-04-28',
               '2012-04-29', '2012-04-30', '2012-05-01', '2012-05-02',
               '2012-05-03', '2012-05-04', '2012-05-05', '2012-05-06',
               '2012-05-07', '2012-05-08', '2012-05-09', '2012-05-10',
               '2012-05-11', '2012-05-12', '2012-05-13', '2012-05-14',
               '2012-05-15', '2012-05-16', '2012-05-17', '2012-05-18',
               '2012-05-19', '2012-05-20', '2012-05-21', '2012-05-22',
               '2012-05-23', '2012-05-24', '2012-05-25', '2012-05-26',
               '2012-05-27', '2012-05-28', '2012-05-29', '2012-05-30',
               '2012-05-31', '2012-06-01'],
              dtype='datetime64[ns]', freq='D')
>>> pd.date_range(start='2012-04-01',periods=20)
DatetimeIndex(['2012-04-01', '2012-04-02', '2012-04-03', '2012-04-04',
               '2012-04-05', '2012-04-06', '2012-04-07', '2012-04-08',
               '2012-04-09', '2012-04-10', '2012-04-11', '2012-04-12',
               '2012-04-13', '2012-04-14', '2012-04-15', '2012-04-16',
               '2012-04-17', '2012-04-18', '2012-04-19', '2012-04-20'],
              dtype='datetime64[ns]', freq='D')
>>> pd.date_range(end='2012-06-01',periods=20)
DatetimeIndex(['2012-05-13', '2012-05-14', '2012-05-15', '2012-05-16',
               '2012-05-17', '2012-05-18', '2012-05-19', '2012-05-20',
               '2012-05-21', '2012-05-22', '2012-05-23', '2012-05-24',
               '2012-05-25', '2012-05-26', '2012-05-27', '2012-05-28',
               '2012-05-29', '2012-05-30', '2012-05-31', '2012-06-01'],
              dtype='datetime64[ns]', freq='D')
>>> pd.date_range('2000-01-01','2000-12-01',freq='BM')
DatetimeIndex(['2000-01-31', '2000-02-29', '2000-03-31', '2000-04-28',
               '2000-05-31', '2000-06-30', '2000-07-31', '2000-08-31',
               '2000-09-29', '2000-10-31', '2000-11-30'],
              dtype='datetime64[ns]', freq='BM')
>>> #想生成一个由每月最后一个工作日组成的日期索引，传入"BM"频率即可
>>> pd.date_range('2000-01-01','2000-12-31',freq='BMS')
DatetimeIndex(['2000-01-03', '2000-02-01', '2000-03-01', '2000-04-03',
               '2000-05-01', '2000-06-01', '2000-07-03', '2000-08-01',
               '2000-09-01', '2000-10-02', '2000-11-01', '2000-12-01'],
              dtype='datetime64[ns]', freq='BMS')
>>> pd.date_range('2012-05-02 12:56:31',periods=5)
DatetimeIndex(['2012-05-02 12:56:31', '2012-05-03 12:56:31',
               '2012-05-04 12:56:31', '2012-05-05 12:56:31',
               '2012-05-06 12:56:31'],
              dtype='datetime64[ns]', freq='D')
>>> pd.date_range('2012-05-02 12:56:31',periods=5,normalize=True)
DatetimeIndex(['2012-05-02', '2012-05-03', '2012-05-04', '2012-05-05',
               '2012-05-06'],
              dtype='datetime64[ns]', freq='D')
>>> from pandas.tseries.offsets import Hour,Minute
>>> hour=Hour()
>>> hour
<Hour>
>>> four_hours=Hour(4)
>>> four_hours
<4 * Hours>
>>> pd.date_range('2000-01-01','2000-01-03 23:59',freq='4h')
DatetimeIndex(['2000-01-01 00:00:00', '2000-01-01 04:00:00',
               '2000-01-01 08:00:00', '2000-01-01 12:00:00',
               '2000-01-01 16:00:00', '2000-01-01 20:00:00',
               '2000-01-02 00:00:00', '2000-01-02 04:00:00',
               '2000-01-02 08:00:00', '2000-01-02 12:00:00',
               '2000-01-02 16:00:00', '2000-01-02 20:00:00',
               '2000-01-03 00:00:00', '2000-01-03 04:00:00',
               '2000-01-03 08:00:00', '2000-01-03 12:00:00',
               '2000-01-03 16:00:00', '2000-01-03 20:00:00'],
              dtype='datetime64[ns]', freq='4H')
>>> Hour(2)+Minute(30)
<150 * Minutes>
>>> pd.date_range('2000-01-01',periods=10,freq='1h30min')
DatetimeIndex(['2000-01-01 00:00:00', '2000-01-01 01:30:00',
               '2000-01-01 03:00:00', '2000-01-01 04:30:00',
               '2000-01-01 06:00:00', '2000-01-01 07:30:00',
               '2000-01-01 09:00:00', '2000-01-01 10:30:00',
               '2000-01-01 12:00:00', '2000-01-01 13:30:00'],
              dtype='datetime64[ns]', freq='90T')
>>> rng=pd.date_range('2012-01-01','2012-09-01',freq='WOM-3FRI')
>>> list(rng)
[Timestamp('2012-01-20 00:00:00', freq='WOM-3FRI'), Timestamp('2012-02-17 00:00:00', freq='WOM-3FRI'), Timestamp('2012-03-16 00:00:00', freq='WOM-3FRI'), Timestamp('2012-04-20 00:00:00', freq='WOM-3FRI'), Timestamp('2012-05-18 00:00:00', freq='WOM-3FRI'), Timestamp('2012-06-15 00:00:00', freq='WOM-3FRI'), Timestamp('2012-07-20 00:00:00', freq='WOM-3FRI'), Timestamp('2012-08-17 00:00:00', freq='WOM-3FRI')]
>>> ts=pd.Series(np.random.randn(4),index=pd.date_range('1/1/2000',periods=4,freq='M'))
>>> ts
2000-01-31   -0.552418
2000-02-29   -1.898229
2000-03-31   -0.630242
2000-04-30    0.283735
Freq: M, dtype: float64
>>> ts.shift(2)
2000-01-31         NaN
2000-02-29         NaN
2000-03-31   -0.552418
2000-04-30   -1.898229
Freq: M, dtype: float64
>>> ts.shift(-2)
2000-01-31   -0.630242
2000-02-29    0.283735
2000-03-31         NaN
2000-04-30         NaN
Freq: M, dtype: float64
>>> ts/ts.shift(1)-1
2000-01-31         NaN
2000-02-29    2.436222
2000-03-31   -0.667984
2000-04-30   -1.450201
Freq: M, dtype: float64
>>> ts.shift(2,freq='M')
2000-03-31   -0.552418
2000-04-30   -1.898229
2000-05-31   -0.630242
2000-06-30    0.283735
Freq: M, dtype: float64
>>> ts.shift(3,freq='D')
2000-02-03   -0.552418
2000-03-03   -1.898229
2000-04-03   -0.630242
2000-05-03    0.283735
dtype: float64
>>> ts.shift(1,freq='90T')
2000-01-31 01:30:00   -0.552418
2000-02-29 01:30:00   -1.898229
2000-03-31 01:30:00   -0.630242
2000-04-30 01:30:00    0.283735
Freq: M, dtype: float64


